global
    log /dev/log	local0
    log /dev/log	local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log	global
    mode	http
    option	httplog
    option	dontlognull
        timeout connect 50000
        timeout client  50000
        timeout server  20000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend www-http
    bind *:80

    acl letsencrypt-acl path_beg /.well-known/acme-challenge/

    # Template ACLs
    acl www.gateway-it.com hdr_beg(host) -i www.gateway-it.com
    acl www.blah.com hdr_beg(host) -i www.blah.com
    acl www.tvar.com hdr_beg(host) -i www.tvar.com

    # HTTPs redirection
    http-request redirect scheme https code 301 unless letsencrypt-acl or { ssl_fc }

    # WWW redirection
    http-request redirect code 301 location https://gateway-it.com if www.gateway-it.com !letsencrypt-acl
    http-request redirect code 301 location https://blah.com if www.blah.com !letsencrypt-acl
    http-request redirect code 301 location https://tvar.com if www.tvar.com !letsencrypt-acl

    # Link from front to backend
    use_backend letsencrypt-backend if letsencrypt-acl
    use_backend gateway-it.com if { hdr(host) -i gateway-it.com }
    use_backend blah.com if { hdr(host) -i blah.com }
    use_backend parasha.com if { hdr(host) -i parasha.com }
    use_backend filmix.com if { hdr(host) -i filmix.com }
    use_backend tvar.com if { hdr(host) -i tvar.com }
    use_backend test.com if { hdr(host) -i test.com }

# Backend servers
backend letsencrypt-backend
    server letsencrypt 127.0.0.1:8888

backend gateway-it.com
    balance leastconn
    option httpchk HEAD /
    option forwardfor
    server gateway-it.com_backend_1 gateway-it.com:443
    server gateway-it.com_backend_2 gateway-it.com:443

backend blah.com
    balance leastconn
    option httpchk HEAD /
    option forwardfor
    server blah.com_backend_1 blah.com:443 check ssl verify none alpn h2,http/1.1
    server blah.com_backend_2 blah.com:443 check ssl verify none alpn h2,http/1.1

backend parasha.com
    balance leastconn
    option httpchk HEAD /
    option forwardfor
    server parasha.com_backend_1 parasha.com:443 check ssl verify none
    server parasha.com_backend_2 parasha.com:443 check ssl verify none

backend filmix.com
    balance leastconn
    option httpchk HEAD /
    option forwardfor
    server filmix.com_backend_1 filmix.com:443 alpn h2,http/1.1
    server filmix.com_backend_2 filmix.com:443 alpn h2,http/1.1

backend tvar.com
    balance leastconn
    option httpchk HEAD /
    option forwardfor
    server tvar.com_backend_1 tvar.com:443
    server tvar.com_backend_2 tvar.com:443

backend test.com
    balance leastconn
    option httpchk HEAD /
    option forwardfor
    server test.com_backend_1 1.1.1.1:443
    server test.com_backend_2 2.2.2.2:443

# Stats page
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE